---
- name: Deploy manager
  hosts: all

  vars:
    operator_user: dragon

    terraform_path: /opt/configuration/terraform
    node_0_address_file: "{{ terraform_path }}/.NODE_0_ADDRESS.{{ cloud_env }}"

  tasks:
    - name: Run managerless part 2
      become: true
      become_user: "{{ operator_user }}"
      ansible.builtin.command: |
        ansible-playbook \
          -e @/opt/configuration/environments/manager/images.yml \
          -e @/opt/configuration/environments/manager/configuration.yml \
          -e @/opt/configuration/environments/images.yml \
          -e @/opt/configuration/environments/configuration.yml \
          -i localhost, \
          /tmp/managerless-part-2.yml
      changed_when: true

    - name: Run managerless part 3
      become: true
      become_user: "{{ operator_user }}"
      ansible.builtin.command: |
        ansible-playbook \
          -e @/opt/configuration/inventory/group_vars/testbed-managers.yml \
          -e @/opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml \
          -e @/opt/configuration/environments/manager/images.yml \
          -e @/opt/configuration/environments/manager/configuration.yml \
          -e @/opt/configuration/environments/manager/secrets.yml \
          -e @/opt/configuration/environments/images.yml \
          -e @/opt/configuration/environments/configuration.yml \
          -e @/opt/configuration/environments/secrets.yml \
          -i testbed-manager.testbed.osism.xyz, \
          --vault-password-file /opt/configuration/environments/.vault_pass \
          /tmp/managerless-part-3.yml
      changed_when: true

    - name: Run managerless part 4
      become: true
      become_user: "{{ operator_user }}"
      ansible.builtin.command: |
        ansible-playbook \
          -e @/opt/configuration/inventory/group_vars/testbed-managers.yml \
          -e @/opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml \
          -e @/opt/configuration/environments/manager/images.yml \
          -e @/opt/configuration/environments/manager/configuration.yml \
          -e @/opt/configuration/environments/manager/secrets.yml \
          -e @/opt/configuration/environments/images.yml \
          -e @/opt/configuration/environments/configuration.yml \
          -e @/opt/configuration/environments/secrets.yml \
          -i testbed-manager.testbed.osism.xyz, \
          --vault-password-file /opt/configuration/environments/.vault_pass \
          /tmp/managerless-part-4.yml
      changed_when: true

    - name: Fetch node_0_host address
      ansible.builtin.command:
        cmd: cat "{{ node_0_address_file }}"
      register: node_0_address
      changed_when: true

    - name: Set node_0_host fact
      ansible.builtin.set_fact:
        node_0_host: "{{ node_0_address.stdout | split('=') | last }}"

    - name: Copy sshuttle script file
      become: true
      ansible.builtin.template:
        src: sshuttle.sh.j2
        dest: /usr/local/bin/sshuttle.sh
        mode: 0755
        owner: root
        group: root

    - name: Copy sshuttle systemd unit file
      become: true
      ansible.builtin.template:
        src: sshuttle.service.j2
        dest: /etc/systemd/system/sshuttle.service
        mode: 0644
        owner: root
        group: root

    - name: Reload systemd daemon
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start/Enable sshuttle service
      become: true
      ansible.builtin.service:
        name: sshuttle
        enabled: true
        state: started

    - name: Wait for hosts
      ansible.builtin.wait_for:
        port: 22
        host: "{{ item }}"
        search_regex: OpenSSH
        delay: 10
      loop:
        - 192.168.16.10
        - 192.168.16.11
        - 192.168.16.12

    - name: Restart manager service
      become: true
      ansible.builtin.service:
        name: "docker-compose@manager"
        state: restarted

    # NOTE: The command returns a list of IDs of containers from the service
    #       that are currently starting or unhealthy. As long as the list is not empty
    #       the service is not in a good state.
    - name: Wait for an healthy manager service
      become: true
      become_user: "{{ operator_user }}"
      ansible.builtin.shell: |
        set -o pipefail
        docker compose --project-directory /opt/manager \
            ps --all --format json | \
            jq '. | select(.State=="created" or .State=="exited" or .Health=="starting" or .Health=="unhealthy") | .Name'
      args:
        executable: /bin/bash
      register: result
      until: "result.stdout | length == 0"
      retries: 50
      delay: 20
      changed_when: true

    - name: Run managerless part 5
      become: true
      become_user: "{{ operator_user }}"
      ansible.builtin.command: |
        ansible-playbook \
          -e @/opt/configuration/inventory/group_vars/testbed-managers.yml \
          -e @/opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml \
          -e @/opt/configuration/environments/manager/images.yml \
          -e @/opt/configuration/environments/manager/configuration.yml \
          -e @/opt/configuration/environments/manager/secrets.yml \
          -e @/opt/configuration/environments/images.yml \
          -e @/opt/configuration/environments/configuration.yml \
          -e @/opt/configuration/environments/secrets.yml \
          -i testbed-manager.testbed.osism.xyz, \
          --vault-password-file /opt/configuration/environments/.vault_pass \
          /tmp/managerless-part-5.yml
      changed_when: true
