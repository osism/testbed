---
- name: Create infrastructure
  hosts: all

  vars:
    cloud_env: managerless

    terraform_path: "{{ zuul.project.src_dir }}/terraform"

    node_0_address_file: "{{ terraform_path }}/.NODE_0_ADDRESS.{{ cloud_env }}"
    node_1_address_file: "{{ terraform_path }}/.NODE_1_ADDRESS.{{ cloud_env }}"
    node_2_address_file: "{{ terraform_path }}/.NODE_2_ADDRESS.{{ cloud_env }}"

  tasks:
    - name: Create infrastructure
      ansible.builtin.command:
        chdir: "{{ terraform_path }}"
        cmd: make ENVIRONMENT={{ cloud_env }} create
      changed_when: true

    - name: Fetch node_0_host address
      ansible.builtin.command: cat "{{ node_0_address_file }}"
      register: node_0_address
      changed_when: true

    - name: Fetch node_1_host address
      ansible.builtin.command: cat "{{ node_1_address_file }}"
      register: node_1_address
      changed_when: true

    - name: Fetch node_2_host address
      ansible.builtin.command: cat "{{ node_2_address_file }}"
      register: node_2_address
      changed_when: true

    - name: Set node_0_host address
      ansible.builtin.set_fact:
        node_0_host: "{{ node_0_address.stdout | split('=') | last }}"

    - name: Set node_1_host address
      ansible.builtin.set_fact:
        node_1_host: "{{ node_1_address.stdout | split('=') | last }}"

    - name: Set node_2_host address
      ansible.builtin.set_fact:
        node_2_host: "{{ node_2_address.stdout | split('=') | last }}"

    - name: Wait up to 300 seconds for port 22 to become open and contain "OpenSSH"
      ansible.builtin.wait_for:
        port: 22
        host: "{{ item }}"
        search_regex: OpenSSH
        delay: 10
        timeout: 300
      loop:
        - "{{ node_0_host }}"
        - "{{ node_1_host }}"
        - "{{ node_2_host }}"

    - name: Fetch ssh hostkeys
      ansible.builtin.shell: "ssh-keyscan {{ item }} >> {{ ansible_user_dir }}/.ssh/known_hosts"
      changed_when: true
      loop:
        - "{{ node_0_host }}"
        - "{{ node_1_host }}"
        - "{{ node_2_host }}"

    - name: Get ssh keypair from terraform environment
      ansible.builtin.shell:
        chdir: "{{ zuul.project.src_dir }}"
        cmd: cp terraform/.id* .
      changed_when: true

- name: Prepare deployment
  hosts: all

  tasks:
    - name: Copy local-deploy play
      ansible.builtin.copy:
        src: local-deploy.yml
        dest: /home/zuul/local-deploy.yml
        mode: 0644
