---
- name: Prepare configuration repository
  hosts: all
  connection: local
  gather_facts: true

  vars:
    create_infrastructure: true
    cloud_env: default

    terraform_path: /opt/configuration/terraform

    node_0_address_file: "{{ terraform_path }}/.NODE_0_ADDRESS.{{ cloud_env }}"
    node_1_address_file: "{{ terraform_path }}/.NODE_1_ADDRESS.{{ cloud_env }}"
    node_2_address_file: "{{ terraform_path }}/.NODE_2_ADDRESS.{{ cloud_env }}"

  tasks:
    - name: Remove testbed-manager from the inventory
      ansible.builtin.command:  # noqa: command-instead-of-module
        cmd: "sed -i '/^testbed-manager.testbed.osism.xyz$/d' /opt/configuration/inventory/10-custom"
      changed_when: true

    - name: Do not use squid
      ansible.builtin.command:  # noqa: command-instead-of-module
        cmd: "{{ item }}"
      changed_when: true
      loop:
        - "sed -i '/^docker_configure_proxy: .*$/,+2d' /opt/configuration/inventory/group_vars/testbed-nodes.yml"
        - "sed -i '/^proxy_proxies:$/,+2d' /opt/configuration/inventory/group_vars/testbed-nodes.yml"

    - name: Fetch node_0_host address
      ansible.builtin.command:
        cmd: cat "{{ node_0_address_file }}"
      register: node_0_address
      changed_when: true
      when:
        - create_infrastructure | bool

    - name: Fetch node_1_host address
      ansible.builtin.command:
        cmd: cat "{{ node_1_address_file }}"
      register: node_1_address
      changed_when: true
      when:
        - create_infrastructure | bool

    - name: Fetch node_2_host address
      ansible.builtin.command:
        cmd: cat "{{ node_2_address_file }}"
      register: node_2_address
      changed_when: true
      when:
        - create_infrastructure | bool

    - name: Set node_0_host address
      ansible.builtin.set_fact:
        node_0_host: "{{ node_0_address.stdout | split('=') | last }}"
      when:
        - create_infrastructure | bool

    - name: Set node_1_host address
      ansible.builtin.set_fact:
        node_1_host: "{{ node_1_address.stdout | split('=') | last }}"
      when:
        - create_infrastructure | bool

    - name: Set node_2_host address
      ansible.builtin.set_fact:
        node_2_host: "{{ node_2_address.stdout | split('=') | last }}"
      when:
        - create_infrastructure | bool

    - name: Set ansible_host for testbed-node-0
      ansible.builtin.command:  # noqa: command-instead-of-module
        cmd: "sed -i 's/ansible_host: .*/ansible_host: {{ node_0_host }}/g' /opt/configuration/inventory/host_vars/testbed-node-0.testbed.osism.xyz.yml"
      changed_when: true
      when:
        - create_infrastructure | bool

    - name: Set ansible_host for testbed-node-1
      ansible.builtin.command:  # noqa: command-instead-of-module
        cmd: "sed -i 's/ansible_host: .*/ansible_host: {{ node_1_host }}/g' /opt/configuration/inventory/host_vars/testbed-node-1.testbed.osism.xyz.yml"
      changed_when: true
      when:
        - create_infrastructure | bool

    - name: Set ansible_host for testbed-node-2
      ansible.builtin.command:  # noqa: command-instead-of-module
        cmd: "sed -i 's/ansible_host: .*/ansible_host: {{ node_2_host }}/g' /opt/configuration/inventory/host_vars/testbed-node-2.testbed.osism.xyz.yml"
      changed_when: true
      when:
        - create_infrastructure | bool

    - name: Do not use traefik for flower
      ansible.builtin.lineinfile:
        path: /opt/configuration/environments/manager/configuration.yml
        state: absent
        regexp: "{{ item }}"
      loop:
        - "^flower_traefik"
        - "^flower_host"

    - name: Do not deploy listener service
      ansible.builtin.lineinfile:
        path: /opt/configuration/environments/manager/configuration.yml
        state: absent
        regexp: "^enable_listener"

    - name: Do not deploy ara service
      ansible.builtin.replace:
        path: /opt/configuration/environments/manager/configuration.yml
        regexp: "^ara_enable.*$"
        replace: "ara_enable: false"

    - name: Do not deploy netbox service
      ansible.builtin.lineinfile:
        path: /opt/configuration/environments/manager/configuration.yml
        state: absent
        regexp: "^netbox_enable"
