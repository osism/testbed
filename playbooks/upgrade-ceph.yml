---
- name: Deploy ceph testbed
  ansible.builtin.import_playbook: deploy-ceph.yml
  vars:
    version_ceph: "{{ ceph_version | default('pacific') }}"
    version_manager: "{{ manager_version | default('latest') }}"

- name: Upgrade ceph testbed
  hosts: all

  vars:
    basepath: "{{ ansible_user_dir }}/src/github.com/osism/testbed"
    terraform_path: "{{ basepath }}/terraform"

    version_ceph_next: "{{ ceph_version_next | default('quincy') }}"
    version_manager_next: "{{ manager_version_next | default('latest') }}"

  vars_files:
    - vars/cloud_envs.yml

  tasks:
    - name: Set cloud_env fact (Zuul deployment)
      ansible.builtin.set_fact:
        cloud_env: "{{ cloud_envs[hostvars[groups['all'][0]]['nodepool']['label']] }}"
      when: "'nodepool' in hostvars[groups['all'][0]]"

    - name: Set cloud_env fact (local deployment)
      ansible.builtin.set_fact:
        cloud_env: "{{ testbed_environment | default('ci') }}"
      when: "'nodepool' not in hostvars[groups['all'][0]]"

    - name: Run upgrade
      ansible.builtin.command:
        chdir: "{{ terraform_path }}"
        cmd: make ENVIRONMENT={{ cloud_env }} VERSION_MANAGER={{ version_manager_next }} VERSION_CEPH={{ version_ceph_next }} upgrade-ceph

    - name: Check services
      ansible.builtin.shell:
        cmd: "ssh -i {{ terraform_path }}/.id_rsa.{{ cloud_env }} dragon@{{ manager_host }} /opt/configuration/scripts/check-ceph-services.sh"
