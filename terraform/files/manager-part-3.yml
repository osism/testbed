---
- name: Copy custom facts
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Install required packages
      become: true
      apt:
        name: python3-netifaces
        state: present

    - name: Create custom facts directory
      become: true
      file:
        path: /etc/ansible/facts.d
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Copy fact files
      become: true
      copy:
        src: /opt/configuration/environments/custom/files/testbed_network_devices.fact
        dest: /etc/ansible/facts.d/testbed_network_devices.fact
        owner: root
        group: root
        mode: 0755

- name: Apply role traefik & netbox
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    docker_registry_ansible: quay.io

  vars_files:
    - /opt/configuration/inventory/group_vars/testbed-managers.yml
    - /opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml
    - /opt/configuration/environments/manager/configuration.yml
    - /opt/configuration/environments/manager/images.yml
    - /opt/configuration/environments/manager/secrets.yml
    - /opt/configuration/environments/infrastructure/configuration.yml
    - /opt/configuration/environments/infrastructure/images.yml
    - /opt/configuration/environments/infrastructure/secrets.yml
    - /opt/configuration/environments/configuration.yml
    - /opt/configuration/environments/secrets.yml

  collections:
    - osism.services

  roles:
    - traefik
    - netbox

- name: Apply role manager
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    docker_registry_ansible: quay.io

  vars_files:
    - /opt/configuration/inventory/group_vars/testbed-managers.yml
    - /opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml
    - /opt/configuration/environments/manager/configuration.yml
    - /opt/configuration/environments/manager/images.yml
    - /opt/configuration/environments/manager/secrets.yml
    - /opt/configuration/environments/configuration.yml
    - /opt/configuration/environments/secrets.yml

  collections:
    - osism.services

  roles:
    - manager

- name: Unseal & initialize vault
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: false

  collections:
    - osism.commons

  tasks:
    - name: Include unseal keys
      include_vars: /opt/manager/secrets/vault_key_shares.yml

    - name: Unseal vault
      include_role:
        name: osism.commons.vault_unseal
      vars:
        vault_unseal_key_1: "{{ unseal_keys_hex[0] }}"
        vault_unseal_key_2: "{{ unseal_keys_hex[1] }}"
        vault_unseal_key_3: "{{ unseal_keys_hex[2] }}"

    # NOTE: Temporary way to initialize Vault
    - name: Initialize vault
      command: "osism apply vault-init -e 'vault_token={{ root_token }}'"
      environment:
        INTERACTIVE: false

    # NOTE: Temporary way to import secrets into Vault
    - name: Import secrets
      command: "osism apply vault-import -e 'vault_token={{ root_token }}' -e 'vault_secrets_path={{ item }}'"
      environment:
        INTERACTIVE: false
      loop:
        - /opt/configuration/environments/ceph/secrets.yml
        - /opt/configuration/environments/custom/secrets.yml
        - /opt/configuration/environments/generic/secrets.yml
        - /opt/configuration/environments/infrastructure/secrets.yml
        - /opt/configuration/environments/kolla/secrets.yml
        - /opt/configuration/environments/manager/secrets.yml
        - /opt/configuration/environments/monitoring/secrets.yml
        - /opt/configuration/environments/openstack/secrets.yml
        - /opt/configuration/environments/secrets.yml
