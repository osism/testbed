---
- name: Bootstrap node - pt. 1
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3

    # repository
    repository_cache_valid_time: 0
    repository_key_ids: {}
    repositories:
      - name: "{{ ansible_distribution_release }}"
        repository: "deb [arch=amd64] http://de.archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} main restricted universe multiverse"
      - name: "{{ ansible_distribution_release }}-backports"
        repository: "deb [arch=amd64] http://de.archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-backports main restricted universe multiverse"
      - name: "{{ ansible_distribution_release }}-security"
        repository: "deb [arch=amd64] http://de.archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-security main restricted universe multiverse"
      - name: "{{ ansible_distribution_release }}-updates"
        repository: "deb [arch=amd64] http://de.archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-updates main restricted universe multiverse"

  collections:
    - osism.commons
    - osism.services

  roles:
    - role: resolvconf
    - role: repository

- name: Bootstrap node - pt. 2
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3

    # cleanup
    cleanup_services_extra:
      - NetworkManager
      - iscsid
      - lxcfs
      - nscd
      - ntp
    cleanup_packages_extra:
      - dosfstools
      - ntfs-3g
      - popularity-contest
      - telnet
      - xauth

    # packages
    upgrade_packages: false

    # operator
    operator_user: dragon
    operator_group: dragon
    operator_authorized_keys:
      - "{{ lookup('file', '/home/ubuntu/.ssh/id_rsa.pub') }}"

  collections:
    - osism.commons
    - osism.services

  roles:
    - role: chrony
    - role: systohc
    - role: configfs
    - role: packages
    - role: sysctl
    - role: services
    - role: motd
    - role: hddtemp
    - role: rng
    - role: cleanup
    - role: operator

- name: Apply role docker
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    docker_configure_repository: true
    docker_configure_storage_driver: true
    docker_storage_driver: overlay2
    docker_user: dragon
    docker_version: "5:20.10.6"

  collections:
    - osism.services

  roles:
    - docker

- name: Apply role docker_compose
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    docker_compose_install_type: package

  collections:
    - osism.commons

  roles:
    - role: docker_compose

# NOTE: The 3rd part is for roles which are based on Docker, for example.

- name: Bootstrap node - pt. 3
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3

  collections:
    - osism.commons

  roles:
    - role: facts
