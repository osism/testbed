---
- name: Create test project
  hosts: localhost
  connection: local

  tasks:
    - name: Create test domain
      openstack.cloud.identity_domain:
        cloud: admin
        state: present
        name: test

    - name: Create test-admin user
      openstack.cloud.identity_user:
        cloud: admin
        state: present
        name: test-admin
        password: test
        email: test-admin@testbed.osism.xyz
        domain: default
      no_log: true

    # NOTE: The CLI is used here because the corresponding Ansible module does
    #       not find the test-admin user in the default domain.
    - name: Add domain-manager role to user test-admin
      ansible.builtin.command: openstack --os-cloud admin role add --domain test --user test-admin domain-manager
      changed_when: true

    - name: Create test project
      openstack.cloud.project:
        cloud: test-admin
        state: present
        name: test
        domain: test

    - name: Create test user
      openstack.cloud.identity_user:
        cloud: test-admin
        state: present
        name: test
        password: test
        email: test@testbed.osism.xyz
        domain: test
        default_project: test
      no_log: true

    - name: Add member roles to user test  # noqa: ignore-errors
      openstack.cloud.role_assignment:
        cloud: test-admin
        state: present
        user: test
        role: "{{ item }}"
        project: test
      loop:
        - load-balancer_member
        - member
        # NOTE The role creator is required to be able to create encrypted volumes
        #      If this role is not assigned the following error happens inside the
        #      cinder-volume service:
        #
        #      Forbidden: Order creation attempt not allowed - please review your
        #      user/project privileges
        - creator
      ignore_errors: true  # NOTE: necessary when we have not deployed Barbican

    - name: Create test network
      openstack.cloud.network:
        cloud: test
        state: present
        name: test
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: Create test subnet
      openstack.cloud.subnet:
        cloud: test
        state: present
        name: subnet-test
        network_name: test
        cidr: 192.168.200.0/24

    - name: Create test router
      openstack.cloud.router:
        cloud: test
        state: present
        name: router-test
        network: public
        interfaces:
          - subnet-test

    - name: Create ssh security group
      openstack.cloud.security_group:
        cloud: test
        state: present
        name: ssh

    - name: Add rule to ssh security group
      openstack.cloud.security_group_rule:
        cloud: test
        state: present
        security_group: ssh
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Create icmp security group
      openstack.cloud.security_group:
        cloud: test
        state: present
        name: icmp

    - name: Add rule to icmp security group
      openstack.cloud.security_group_rule:
        cloud: test
        state: present
        security_group: icmp
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0

    - name: Create test keypair
      openstack.cloud.keypair:
        cloud: test
        state: present
        name: test
        public_key_file: /opt/configuration/environments/openstack/id_rsa.test.pub

    - name: Create test instance
      openstack.cloud.server:
        cloud: test
        state: present
        name: test
        image: "Cirros 0.6.0"
        flavor: "SCS-1L-1-5"
        delete_fip: true
        key_name: test
        network: test
        security_groups:
          - icmp
          - ssh

    - name: Create test volume
      openstack.cloud.volume:
        cloud: test
        state: present
        name: test
        size: 1

    - name: Attach test volume
      openstack.cloud.server_volume:
        cloud: test
        state: present
        server: test
        volume: test

    - name: Create floating ip address
      openstack.cloud.floating_ip:
        cloud: test
        state: present
        server: test
        network: public
        wait: true
      register: result

    - name: Print floating ip address
      ansible.builtin.debug:
        msg: "{{ result.floating_ip.floating_ip_address }}"
