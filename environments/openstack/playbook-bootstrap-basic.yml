---
- name: Prepare masquerading on the manager node
  hosts: testbed-managers

  tasks:
    - name: Accpet FORWARD on the management interface (incoming)
      become: true
      ansible.builtin.iptables:
        chain: FORWARD
        in_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: ACCEPT

    - name: Accept FORWARD on the management interface (outgoing)
      become: true
      ansible.builtin.iptables:
        chain: FORWARD
        out_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: ACCEPT

    - name: Masquerade traffic on the management interface
      become: true
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: MASQUERADE

- name: Bootstrap basic OpenStack services
  hosts: localhost
  connection: local

  tasks:
    # NOTE: volume type not available in the openstack.cloud collection
    - name: Get volume type LUKS
      ansible.builtin.command: openstack --os-cloud admin volume type show LUKS
      register: volume_type_result
      changed_when: false
      failed_when: false

    - name: Create volume type LUKS
      ansible.builtin.command: openstack --os-cloud admin volume type create --encryption-provider luks --encryption-cipher aes-xts-plain64 --encryption-key-size 256 --encryption-control-location front-end LUKS
      when: volume_type_result.rc == 1
      changed_when: true

    - name: Create public network
      openstack.cloud.network:
        cloud: admin
        state: present
        name: public
        external: true
        provider_network_type: flat
        provider_physical_network: physnet1
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: Create public subnet
      openstack.cloud.subnet:
        cloud: admin
        state: present
        name: subnet-public
        network_name: public
        cidr: 192.168.112.0/20
        enable_dhcp: false
        allocation_pool_start: 192.168.112.100
        allocation_pool_end: 192.168.112.200
        gateway_ip: 192.168.112.5

    - name: Create domain-manager role
      openstack.cloud.identity_role:
        cloud: admin
        state: present
        name: domain-manager
