---
- name: Prepare masquerading on the manager node
  hosts: testbed-managers
  collections:
    - ansible.builtin

  tasks:
    - name: Accpet FORWARD on the management interface (incoming)
      become: true
      ansible.builtin.iptables:
        chain: FORWARD
        in_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: ACCEPT

    - name: Accept FORWARD on the management interface (outgoing)
      become: true
      ansible.builtin.iptables:
        chain: FORWARD
        out_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: ACCEPT

    - name: Masquerade traffic on the management interface
      become: true
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: MASQUERADE

- name: Create SCS flavors
  hosts: localhost
  connection: local
  collections:
    - openstack.cloud

  tasks:
    # vCPU:RAM ratio: 4:8
    - name: "Create SCS-4V:8 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-4V:8"
        ram: 8192
        vcpus: 4
        disk: 0
        ephemeral: 0

    - name: "Create SCS-4V:8:20 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-4V:8:20"
        ram: 8192
        vcpus: 4
        disk: 20
        ephemeral: 0

    # vCPU:RAM ratio: 2:8
    - name: "Create SCS-2V:8 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-2V:8"
        ram: 8192
        vcpus: 2
        disk: 0
        ephemeral: 0

    - name: "Create SCS-2V:8:20 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-2V:8:20"
        ram: 8192
        vcpus: 2
        disk: 20
        ephemeral: 0

    # vCPU:RAM ratio: 1:8
    - name: "Create SCS-1V:8 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1V:8"
        ram: 8192
        vcpus: 1
        disk: 0
        ephemeral: 0

    - name: "Create SCS-1V:8:20 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1V:8:20"
        ram: 8192
        vcpus: 1
        disk: 20
        ephemeral: 0

    # vCPU:RAM ratio: 2:4
    - name: "Create SCS-2V:4 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-2V:4"
        ram: 4096
        vcpus: 2
        disk: 0
        ephemeral: 0

    - name: "Create SCS-2V:4:10 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-2V:4:10"
        ram: 4096
        vcpus: 2
        disk: 10
        ephemeral: 0

    # vCPU:RAM ratio: 1:4
    - name: "Create SCS-1V:4 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1V:4"
        ram: 4096
        vcpus: 1
        disk: 0
        ephemeral: 0

    - name: "Create SCS-1V:4:10 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1V:4:10"
        ram: 4096
        vcpus: 1
        disk: 10
        ephemeral: 0

    # vCPU:RAM ratio: 1:2
    - name: "Create SCS-1V:2 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1V:2"
        ram: 2048
        vcpus: 1
        disk: 0
        ephemeral: 0

    - name: "Create SCS-1V:2:5 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1V:2:5"
        ram: 2048
        vcpus: 1
        disk: 5
        ephemeral: 0

    # vCPU:RAM ratio: 1:1
    - name: "Create SCS-1L:1 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1L:1"
        ram: 1024
        vcpus: 1
        disk: 0
        ephemeral: 0

    - name: "Create SCS-1L:1:5 SCS flavor"
      openstack.cloud.compute_flavor:
        cloud: admin
        state: present
        name: "SCS-1L:1:5"
        ram: 1024
        vcpus: 1
        disk: 5
        ephemeral: 0

- name: Create Encrypted Volume Type
  hosts: localhost

  tasks:
    # NOTE: volume type not available in the openstack.cloud collection
    - name: Get volume type LUKS
      ansible.builtin.command: openstack --os-cloud admin volume type show LUKS
      register: volume_type_result
      changed_when: false
      failed_when: false

    - name: Create volume type LUKS
      ansible.builtin.command: openstack --os-cloud admin volume type create --encryption-provider luks --encryption-cipher aes-xts-plain64 --encryption-key-size 256 --encryption-control-location front-end LUKS
      when: volume_type_result.rc == 1

- name: Bootstrap basic OpenStack services
  hosts: localhost
  connection: local
  collections:
    - ansible.builtin
    - openstack.cloud

  vars:
    openstack_version: yoga
    url_ubuntu_image: https://cloud-images.ubuntu.com/minimal/releases/jammy/release/ubuntu-22.04-minimal-cloudimg-amd64.img
    url_cirros_image: https://github.com/cirros-dev/cirros/releases/download/0.5.2/cirros-0.5.2-x86_64-disk.img

  tasks:
    - name: Create test project
      openstack.cloud.project:
        cloud: admin
        state: present
        name: test
        domain_id: default

    - name: Create test user
      openstack.cloud.identity_user:
        cloud: admin
        state: present
        name: test
        password: test
        email: test@testbed.osism.xyz
        domain: default
        default_project: test
      no_log: true

    - name: Add member roles to user test
      openstack.cloud.role_assignment:
        cloud: admin
        state: present
        user: test
        role: "{{ item }}"
        project: test
      loop:
        - load-balancer_member
        - member

    - name: Download cirros image
      ansible.builtin.get_url:
        url: "{{ url_cirros_image }}"
        dest: /tmp/cirros.img
        mode: 0644

    - name: Upload cirros image
      openstack.cloud.image:
        cloud: admin
        state: present
        name: cirros
        is_public: true
        container_format: bare
        disk_format: qcow2
        filename: /tmp/cirros.img
        min_disk: 1
        properties:
          cpu_arch: x86_64
          distro: ubuntu
          hw_rng_model: virtio

    - name: Download ubuntu minimal 22.04 image
      ansible.builtin.get_url:
        url: "{{ url_ubuntu_image }}"
        dest: /tmp/ubuntu.img
        mode: 0644

    - name: Get timestamp from the system
      ansible.builtin.command: "date +%Y-%m-%d"
      register: date
      changed_when: false

    - name: Upload ubuntu minimal 22.04 image
      openstack.cloud.image:
        cloud: admin
        state: present
        name: "Ubuntu 22.04"
        is_public: true
        container_format: bare
        disk_format: qcow2
        filename: /tmp/ubuntu.img
        min_disk: 3
        min_ram: 512
        properties:
          architecture: x86_64
          cpu_arch: x86_64
          distro: ubuntu
          hw_disk_bus: scsi
          hw_rng_model: virtio
          hw_scsi_model: virtio-scsi
          hypervisor_type: kvm
          # NOTE: The upload date is taken at this point. The Ubuntu upstream images are rotated and not archived.
          image_build_date: "{{ date.stdout }}"
          image_description: https://launchpad.net/cloud-images
          image_original_user: ubuntu
          image_source: "{{ url_ubuntu_image }}"
          os_distro: ubuntu
          os_version: "22.04"
          replace_frequency: never
          uuid_validity: forever

    - name: Download amphora image
      ansible.builtin.get_url:
        url: "https://minio.services.osism.tech/openstack-octavia-amphora-image/octavia-amphora-haproxy-{{ openstack_version }}.qcow2"
        dest: /tmp/amphora.img
        mode: 0644

    - name: Upload amphora image
      openstack.cloud.image:
        cloud: octavia
        state: present
        name: amphora
        container_format: bare
        disk_format: qcow2
        filename: /tmp/amphora.img
        min_disk: 2
        tags:
          - amphora
        properties:
          cpu_arch: x86_64
          distro: ubuntu
          hw_rng_model: virtio

    - name: Create public network
      openstack.cloud.network:
        cloud: admin
        state: present
        name: public
        external: true
        provider_network_type: flat
        provider_physical_network: physnet1
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: Create public subnet
      openstack.cloud.subnet:
        cloud: admin
        state: present
        name: subnet-public
        network_name: public
        cidr: 192.168.112.0/20
        enable_dhcp: false
        allocation_pool_start: 192.168.112.100
        allocation_pool_end: 192.168.112.200
        gateway_ip: 192.168.112.5

    - name: Create test network
      openstack.cloud.network:
        cloud: test
        state: present
        name: test
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: Create test subnet
      openstack.cloud.subnet:
        cloud: test
        state: present
        name: subnet-test
        network_name: test
        cidr: 192.168.200.0/24

    - name: Create test router
      openstack.cloud.router:
        cloud: test
        state: present
        name: router-test
        network: public
        interfaces:
          - subnet-test

    - name: Create ssh security group
      openstack.cloud.security_group:
        cloud: test
        state: present
        name: ssh

    - name: Add rule to ssh security group
      openstack.cloud.security_group_rule:
        cloud: test
        state: present
        security_group: ssh
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Create icmp security group
      openstack.cloud.security_group:
        cloud: test
        state: present
        name: icmp

    - name: Add rule to icmp security group
      openstack.cloud.security_group_rule:
        cloud: test
        state: present
        security_group: icmp
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0

    - name: Create test keypair
      openstack.cloud.keypair:
        cloud: test
        state: present
        name: test
        public_key_file: /opt/configuration/environments/openstack/id_rsa.test.pub

    - name: Create test instance
      openstack.cloud.server:
        cloud: test
        state: present
        name: test
        image: cirros
        flavor: "SCS-1L:1:5"
        network: test
        delete_fip: true
        key_name: test
        security_groups:
          - icmp
          - ssh

    - name: Create test volume
      openstack.cloud.volume:
        cloud: test
        state: present
        name: test
        size: 1

    - name: Attach test volume
      openstack.cloud.server_volume:
        cloud: test
        state: present
        server: test
        volume: test

    - name: Create encrypted test volume
      openstack.cloud.volume:
        cloud: test
        state: present
        name: lukstest
        size: 1
        volume_type: LUKS

    - name: Attach encrypted test volume
      openstack.cloud.server_volume:
        cloud: test
        state: present
        server: test
        volume: lukstest

    - name: Get info of server test
      openstack.cloud.server_info:
        cloud: test
        server: test
      register: result

    - name: Create load balancer
      openstack.cloud.loadbalancer:
        cloud: test
        state: present
        name: test
        vip_network: test
        auto_public_ip: true
        public_network: public
        timeout: 600
        listeners:
          - name: listener_test_22
            protocol: TCP
            protocol_port: 22
            pool:
              name: pool_test_22
              protocol: TCP
              members:
                - name: test
                  protocol_port: 22
                  subnet: subnet-test
                  address: "{{ result['openstack_servers'][0]['private_v4'] }}"
