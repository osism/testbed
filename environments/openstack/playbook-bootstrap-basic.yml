---
- name: Prepare masquerading on the manager node
  hosts: testbed-manager

  tasks:
    - name: Accpet FORWARD on the management interface (incoming)
      iptables:
        chain: FORWARD
        in_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: ACCEPT
      become: yes

    - name: Accept FORWARD on the management interface (outgoing)
      iptables:
        chain: FORWARD
        out_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: ACCEPT
      become: yes

    - name: Masquerade traffic on the management interface
      iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ ansible_local.testbed_network_devices.management }}"
        jump: MASQUERADE
      become: yes

- name: Bootstrap basic OpenStack services
  hosts: localhost
  connection: local

  tasks:
    - name: Create test project
      os_project:
        cloud: admin
        state: present
        name: test
        domain_id: default

    - name: Create test user
      os_user:
        cloud: admin
        state: present
        name: test
        password: test
        email: test@osism.test
        domain: default
        default_project: test
      no_log: true

    # NOTE: this role is required by octavia
    - name: Create load-balancer_member role
      os_keystone_role:
        cloud: admin
        state: present
        name: load-balancer_member

    - name: Add member roles to user test
      os_user_role:
        cloud: admin
        state: present
        user: test
        role: "{{ item }}"
        project: test
      loop:
        - load-balancer_member
        - member
        - _member_

    - name: Create tiny flavor
      os_nova_flavor:
        cloud: admin
        state: present
        name: 1C-256MB-1GB
        ram: 256
        vcpus: 1
        disk: 1
        ephemeral: 0
        extra_specs:
          "hw_rng:allowed": "True"

    - name: Create small flavor
      os_nova_flavor:
        cloud: admin
        state: present
        name: 1C-512MB-1GB
        ram: 512
        vcpus: 1
        disk: 1
        ephemeral: 0
        extra_specs:
          "hw_rng:allowed": "True"

    - name: Create medium flavor
      os_nova_flavor:
        cloud: admin
        state: present
        name: 1C-1GB-5GB
        ram: 1024
        vcpus: 1
        disk: 5
        ephemeral: 0
        extra_specs:
          "hw_rng:allowed": "True"

    - name: Download cirros image
      get_url:
        url: https://github.com/cirros-dev/cirros/releases/download/0.5.1/cirros-0.5.1-x86_64-disk.img
        dest: /tmp/cirros.img

    - name: Upload cirros image
      os_image:
        cloud: admin
        state: present
        name: cirros
        container_format: bare
        disk_format: qcow2
        filename: /tmp/cirros.img
        properties:
          cpu_arch: x86_64
          distro: ubuntu
          hw_rng_model: virtio

    # NOTE: is_public from os_image is not working like expected
    - name: Make cirros image visible
      command: openstack --os-cloud admin image set --public cirros  # noqa 301

    - name: Download ubuntu minimal 20.04 image
      get_url:
        url: http://cloud-images.ubuntu.com/minimal/releases/focal/release/ubuntu-20.04-minimal-cloudimg-amd64.img
        dest: /tmp/ubuntu.img

    - name: Upload ubuntu minimal 20.04 image
      os_image:
        cloud: admin
        state: present
        name: ubuntu
        container_format: bare
        disk_format: qcow2
        filename: /tmp/ubuntu.img
        properties:
          cpu_arch: x86_64
          distro: ubuntu
          hw_rng_model: virtio

    # NOTE: is_public from os_image is not working like expected
    - name: Make ubuntu minimal 20.04 image visible
      command: openstack --os-cloud admin image set --public ubuntu  # noqa 301

    - name: Create public network
      os_network:
        cloud: admin
        state: present
        name: public
        external: true
        provider_network_type: flat
        provider_physical_network: physnet1
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: Create public subnet
      os_subnet:
        cloud: admin
        state: present
        name: subnet-public
        network_name: public
        cidr: 192.168.112.0/20
        enable_dhcp: false
        allocation_pool_start: 192.168.112.100
        allocation_pool_end: 192.168.112.200
        gateway_ip: 192.168.112.5

    - name: Create test network
      os_network:
        cloud: test
        state: present
        name: test
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: Create test subnet
      os_subnet:
        cloud: test
        state: present
        name: subnet-test
        network_name: test
        cidr: 192.168.200.0/24

    - name: Create test router
      os_router:
        cloud: test
        state: present
        name: router-test
        network: public
        interfaces:
          - subnet-test

    - name: Create ssh security group
      os_security_group:
        cloud: test
        state: present
        name: ssh

    - name: Add rule to ssh security group
      os_security_group_rule:
        cloud: test
        state: present
        security_group: ssh
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Create icmp security group
      os_security_group:
        cloud: test
        state: present
        name: icmp

    - name: Add rule to icmp security group
      os_security_group_rule:
        cloud: test
        state: present
        security_group: icmp
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0

    - name: Create test keypair
      os_keypair:
        cloud: test
        state: present
        name: test
        public_key_file: /opt/configuration/environments/openstack/id_rsa.test.pub

    - name: Create test instance
      os_server:
        cloud: test
        state: present
        name: test
        image: cirros
        flavor: 1C-512MB-1GB
        network: test
        delete_fip: true
        key_name: test
        security_groups:
          - icmp
          - ssh

    - name: Create test volume
      os_volume:
        cloud: test
        state: present
        name: test
        size: 1

    - name: Attach test volume
      os_server_volume:
        cloud: test
        state: present
        server: test
        volume: test
