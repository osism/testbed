#!/usr/bin/env python3

import json
import netifaces
import subprocess

NETWORKS = {
    "external": "192.168.96",
    "management": "192.168.16",
    "provider": "192.168.112",
}

result = {}

for interface in netifaces.interfaces():
    if interface in ["lo", "docker0", "ohm0", "o-hm0"]:
        continue
    elif interface.startswith("br"):
        continue
    elif interface.startswith("ovs"):
        continue
    elif interface.startswith("vxlan"):
        continue
    elif interface.startswith("veth"):
        continue
    elif interface.startswith("tap"):
        continue
    elif interface.startswith("qg"):
        continue
    elif interface.startswith("genev"):
        continue

    addrs = netifaces.ifaddresses(interface)
    if netifaces.AF_INET in addrs:
        for addr in addrs[netifaces.AF_INET]:
            for network in NETWORKS:
                if addr["addr"].startswith(NETWORKS[network]):
                    result[network] = interface

# NOTE: vxlan is always used as provider network.
result["provider"] = "vxlan0"


# If result is empty, we are probably on the managerless deployment path
# and use the IP address of the 1st interface accordingly.
if "management" not in result:
    r = subprocess.check_output(
        "hostname --all-ip-addresses | awk '{print $1}'", shell=True
    )
    firstip_address = r.decode().strip()

    r = subprocess.check_output(
        "ip -br -4 a sh | grep %s | awk '{print $1}'" % firstip_address, shell=True
    )
    first_network_interface = r.decode().strip()
    result["management"] = first_network_interface

print(json.dumps(result))
