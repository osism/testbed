---
- name: Group hosts based on configuration
  hosts: all
  gather_facts: false

  tasks:
    - name: Group hosts based on virtualization_role
      ansible.builtin.group_by:
        key: "{{ item }}"
      with_items:
        - virtualization_role_{{ ansible_virtualization_role }}
      tags: always

# NOTE: The netplan apply call is made separately and not via the osism.commons.network role in order
#       to keep the default configuration in the testbed. In the default configuration, network restarts
#       are deactivated.

- name: Apply netplan configuration on the manager node
  hosts: manager
  gather_facts: false

  tasks:
    - name: Apply netplan configuration
      become: true
      ansible.builtin.command: netplan apply
      changed_when: false
      failed_when: false  # netplan apply can lead to disconnections, ignore them

- name: Apply netplan configuration on all other nodes
  hosts: all:!manager
  gather_facts: false

  tasks:
    - name: Apply netplan configuration
      become: true
      ansible.builtin.command: netplan apply
      changed_when: false
      failed_when: false  # netplan apply can lead to disconnections, ignore them

- name: Add a workaround service to non-manager nodes
  hosts: all:!manager
  gather_facts: false

  tasks:
    - name: Copy workarounds.sh scripts
      become: true
      ansible.builtin.template:
        src: workarounds.sh.j2
        dest: /usr/local/bin/workarounds.sh
        mode: 0755
        owner: root
        group: root

    - name: Copy workarounds systemd unit file
      become: true
      ansible.builtin.template:
        src: workarounds.service.j2
        dest: /etc/systemd/system/workarounds.service
        mode: 0644
        owner: root
        group: root

    - name: Reload systemd daemon
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable workarounds.service
      become: true
      ansible.builtin.service:
        name: workarounds
        enabled: true
