---
- name: Wipe partitions
  hosts: ceph-resource
  gather_facts: false

  tasks:
    - name: Find all logical devices owned by UID 167
      ansible.builtin.command: find /dev/mapper -uid 167
      register: result
      changed_when: true

    # Rook sometimes leaves entries in /dev/mapper that cannot be removed with dmsetup.
    # These are ignored.
    - name: Remove all rook related logical devices
      become: true
      ansible.builtin.shell:
        dmsetup remove -f {{ item }} || exit 0
      loop: "{{ result.stdout_lines }}"
      changed_when: true

    - name: Find all logical devices with prefix ceph
      ansible.builtin.find:
        paths: /dev/mapper
        recurse: false
        file_type: any
        patterns: "ceph*"
      register: result

    # https://github.com/rook/rook/issues/6865#issuecomment-756698522
    # Rook sometimes leaves entries in /dev/mapper that cannot be removed with dmsetup.
    # These are ignored.
    - name: Remove all ceph related logical devices
      become: true
      ansible.builtin.shell:
        dmsetup remove -f {{ item.path }} || exit 0
      loop: "{{ result.files }}"
      changed_when: true

    - name: Check device availability
      ansible.builtin.command: "lsblk -no MOUNTPOINT {{ item }}"
      register: result_lsblk
      changed_when: true
      loop: "{{ ansible_local.testbed_ceph_devices_all }}"

    - name: Wipe partitions with wipefs
      become: true
      ansible.builtin.command: "wipefs --all {{ item.item }}"
      register: result_wipefs
      changed_when: result_wipefs.rc == 0 and result_wipefs.stdout != ""
      failed_when: result_wipefs.rc != 0 and result_wipefs.rc != 1
      when: item.stdout == ""
      loop: "{{ result_lsblk.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Overwrite first 32M with zeros
      become: true
      ansible.builtin.command: "dd if=/dev/zero of={{ item.item }} bs=1M count=32 oflag=direct,dsync"
      changed_when: true
      when: item.stdout == ""
      loop: "{{ result_lsblk.results }}"
      loop_control:
        label: "{{ item.item }}"

    # https://github.com/rook/rook/issues/6865#issuecomment-1098242814
    - name: Reload udev rules
      become: true
      ansible.builtin.command: udevadm control --reload-rules
      changed_when: true

    # https://github.com/rook/rook/issues/6865#issuecomment-1098242814
    - name: Request device events from the kernel
      become: true
      ansible.builtin.command: udevadm trigger
      changed_when: true
