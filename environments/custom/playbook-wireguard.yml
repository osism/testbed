---
- name: Install wireguard
  hosts: manager
  gather_facts: false

  tasks:

    # NOTE: the wirguard repository is only required on Bionic
    - name: Add wireguard repository
      become: true
      apt_repository:
        repo: ppa:wireguard/wireguard
        mode: 0600
      when: "ansible_distribution_release == 'bionic'"

    # NOTE: required by wireguard-dkms
    - name: Install kernel headers
      become: true
      apt:
        name: linux-headers-generic
        state: present
      when: "ansible_distribution_release == 'bionic'"

    - name: Install wireguard packages
      become: true
      apt:
        name: ["wireguard", "wireguard-dkms"]
        state: present

    - name: Build wireguard kernel module
      become: true
      command: dpkg-reconfigure wireguard-dkms  # noqa 301

    - name: Create public and private key - client
      become: true
      shell: |
        set -o pipefail
        umask 077
        wg genkey | tee /etc/wireguard/client.key | wg pubkey > /etc/wireguard/client.pub
      args:
        creates: /etc/wireguard/client.key
        executable: /bin/bash

    - name: Create public and private key - server
      become: true
      shell: |
        set -o pipefail
        umask 077
        wg genkey | tee /etc/wireguard/server.key | wg pubkey > /etc/wireguard/server.pub
      args:
        creates: /etc/wireguard/server.key
        executable: /bin/bash

    - name: Create preshared key
      shell: umask 077; wg genpsk > /etc/wireguard/osism.psk
      become: true
      args:
        creates: /etc/wireguard/osism.psk

    - name: Get preshared key
      become: true
      slurp:
        src: /etc/wireguard/osism.psk
      register: preshared_key

    - name: Get public key - client
      become: true
      slurp:
        src: /etc/wireguard/client.pub
      register: public_key_client

    - name: Get private key - client
      become: true
      slurp:
        src: /etc/wireguard/client.key
      register: private_key_client

    - name: Get public key - server
      become: true
      slurp:
        src: /etc/wireguard/server.pub
      register: public_key_server

    - name: Get private key - server
      become: true
      slurp:
        src: /etc/wireguard/server.key
      register: private_key_server

    - name: Copy wireguard-client.conf configuration file
      template:
        src: wireguard/client.conf.j2
        dest: "/home/{{ operator_user }}/wireguard-client.conf"
        owner: "{{ operator_user }}"
        group: "{{ operator_group }}"
        mode: 0600

    - name: Copy wg0.conf configuration file
      become: true
      template:
        src: wireguard/server.conf.j2
        dest: /etc/wireguard/wg0.conf
        owner: root
        group: root
        mode: 0600
      notify: Restart wg0 service

    # NOTE: Errors are ignored because the kernel module may not be available
    #       after initial installation until after a reboot.
    - name: Start/enable wg-quick@wg0.service service
      become: true
      systemd:
        name: wg-quick@wg0.service
        state: started
        enabled: true
      ignore_errors: true

  handlers:
    # NOTE: Errors are ignored because the kernel module may not be available
    #       after initial installation until after a reboot.
    - name: Restart wg0 service
      become: true
      systemd:
        name: wg-quick@wg0.service
        state: restarted
      ignore_errors: true

- hosts: all:!manager
  gather_facts: false

  tasks:
    - name: Add route to 192.168.48.0/20
      become: true
      command: ip route replace 192.168.48.0/20 via 192.168.16.5  # noqa 301
