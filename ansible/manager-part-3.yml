---
- name: Copy custom facts
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/bin/python3
    apt_lock_timeout: 300

  tasks:
    - name: Install required packages
      become: true
      ansible.builtin.apt:
        name: python3-netifaces
        state: present
        lock_timeout: "{{ apt_lock_timeout }}"

    - name: Create custom facts directory
      become: true
      ansible.builtin.file:
        path: /etc/ansible/facts.d
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Copy fact files
      become: true
      ansible.builtin.copy:
        src: /opt/configuration/environments/custom/files/testbed_network_devices.fact
        dest: /etc/ansible/facts.d/testbed_network_devices.fact
        owner: root
        group: root
        mode: 0755

# With this play, we can decouple the pull of the required images from the
# subsequent roles (traefik, manager, netbox). This makes problems resulting
# from image pulls more visible in the CI.
- name: Pull manager images
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: true

  vars:
    images_manager:
      - "{{ ara_server_image }}"
      - "{{ ara_server_mariadb_image }}"
      - "{{ ceph_ansible_image }}"
      - "{{ inventory_reconciler_image }}"
      - "{{ kolla_ansible_image }}"
      - "{{ manager_redis_image }}"
      - "{{ osism_ansible_image }}"
      - "{{ osism_image }}"
      - "{{ osism_netbox_image }}"
      - "{{ vault_image }}"

    images_traefik_netbox:
      - "{{ netbox_image }}"
      - "{{ postgres_image }}"
      - "{{ traefik_image }}"

  vars_files:
    - /opt/configuration/environments/manager/configuration.yml
    - /opt/configuration/environments/configuration.yml
    - /opt/configuration/environments/manager/images.yml

  tasks:
    - name: Pull traefik & netbox images
      community.docker.docker_image:
        name: "{{ item }}"
        source: pull
      async: 600
      poll: 0
      loop: "{{ images_traefik_netbox }}"
      register: async_results

    - name: Pull manager images
      community.docker.docker_image:
        name: "{{ item }}"
        source: pull
      async: 600
      poll: 0
      loop: "{{ images_manager }}"

    - name: Check pull status of traefik & netbox images
      ansible.builtin.async_status:
        jid: "{{ async_result_item.ansible_job_id }}"
      loop: "{{ async_results.results }}"
      loop_control:
        loop_var: "async_result_item"
      register: async_poll_results
      until: async_poll_results.finished
      retries: 30

- name: Apply role traefik & netbox
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3

  vars_files:
    - /opt/configuration/inventory/group_vars/testbed-managers.yml
    - /opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml
    - /opt/configuration/environments/manager/configuration.yml
    - /opt/configuration/environments/manager/images.yml
    - /opt/configuration/environments/manager/secrets.yml
    - /opt/configuration/environments/infrastructure/configuration.yml
    - /opt/configuration/environments/infrastructure/images.yml
    - /opt/configuration/environments/infrastructure/secrets.yml
    - /opt/configuration/environments/configuration.yml
    - /opt/configuration/environments/secrets.yml

  tasks:
    - name: Apply traefik role
      ansible.builtin.include_role:
        name: osism.services.traefik

    - name: Try to apply the netbox role
      block:  # noqa osism-fqcn
        - name: Apply netbox role
          ansible.builtin.include_role:
            name: osism.services.netbox
      rescue:
        - name: Collect debug logs
          ansible.builtin.shell: |
            docker images
            docker ps -a
            docker logs netbox-netbox-1
          changed_when: true

- name: Apply role manager
  hosts: testbed-manager.testbed.osism.xyz
  connection: local
  gather_facts: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    manager_service_restart: false

  vars_files:
    - /opt/configuration/inventory/group_vars/testbed-managers.yml
    - /opt/configuration/inventory/host_vars/testbed-manager.testbed.osism.xyz.yml
    - /opt/configuration/environments/manager/configuration.yml
    - /opt/configuration/environments/manager/images.yml
    - /opt/configuration/environments/manager/secrets.yml
    - /opt/configuration/environments/configuration.yml
    - /opt/configuration/environments/secrets.yml

  tasks:
    - name: Try to apply the manager role
      block:  # noqa osism-fqcn
        - name: Apply manager role
          ansible.builtin.include_role:
            name: osism.services.manager
      rescue:
        - name: Collect debug logs
          ansible.builtin.shell: |
            docker images
            docker ps -a
          changed_when: true
