---
- name: Wait for cloud-init to finish
  hosts: testbed-manager.testbed.osism.xyz
  gather_facts: false

  tasks:
    # NOTE: https://github.com/hashicorp/packer/issues/2639
    - name: Check /var/lib/cloud/instance/boot-finished
      ansible.builtin.raw: timeout 180 /bin/bash -c 'until stat /var/lib/cloud/instance/boot-finished 2>/dev/null; do echo Wait for cloud-init to finish; sleep 1; done'

- name: Run manager part 0
  hosts: testbed-manager.testbed.osism.xyz
  gather_facts: false

  vars:
    repo_path: /home/ubuntu/src/github.com
    apt_lock_timeout: 300

  tasks:
    - name: Update APT cache and run dist-upgrade
      become: true
      ansible.builtin.apt:
        upgrade: dist
        update_cache: true
        lock_timeout: "{{ apt_lock_timeout }}"

    - name: Set APT options on manager  # noqa risky-shell-pipe
      become: true
      ansible.builtin.shell: |
        echo "APT::Acquire::Retries \"3\";" > /etc/apt/apt.conf.d/80-retries
        echo '* libraries/restart-without-asking boolean true' | debconf-set-selections

    - name: Install packages on manager
      become: true
      ansible.builtin.shell: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install --yes \
          git-lfs \
          python3-argcomplete \
          python3-cryptography \
          python3-dnspython \
          python3-jmespath \
          python3-kerberos \
          python3-libcloud \
          python3-lockfile \
          python3-netaddr \
          python3-netifaces \
          python3-ntlm-auth \
          python3-pip \
          python3-requests-kerberos \
          python3-requests-ntlm \
          python3-selinux \
          python3-winrm \
          python3-xmltodict

    - name: Remove existing Ansible package if necessary
      become: true
      ansible.builtin.apt:
        name: ansible
        state: absent

    # ansible-core >= 2.14.0 requires Python >= 3.9. This is not yet available on Ubuntu 20.04.
    # Therefore, we use ansible-core >= 2.13.0 here to be able to test on Ubuntu 20.04 as well.
    # This can be changed when we no longer support Ubuntu 20.04.
    - name: Install ansible-core on manager
      become: true
      ansible.builtin.command: |
          pip3 install --no-cache-dir 'ansible-core>=2.13.0,<2.15.0'

    - name: Create source directories
      become: true
      ansible.builtin.file:
        state: directory
        path: "/opt/src/{{ item }}"
        recurse: true
        mode: '0755'
        owner: ubuntu
      with_items:
        - osism/ansible-collection-commons
        - osism/ansible-collection-services

    - name: Copy sources
      ansible.posix.synchronize:
        src: "{{ repo_path }}/{{ item }}"
        delete: true
        dest: "/opt/src/{{ item }}"
      with_items:
        - osism/ansible-collection-commons
        - osism/ansible-collection-services

    - name: Create /usr/share/ansible directory
      become: true
      ansible.builtin.file:
        state: directory
        path: /usr/share/ansible
        mode: '0755'

    - name: Install collections
      become: true
      ansible.builtin.shell: |
          ansible-galaxy collection install --collections-path /usr/share/ansible/collections ansible.netcommon
          ansible-galaxy collection install --collections-path /usr/share/ansible/collections ansible.posix
          ansible-galaxy collection install --collections-path /usr/share/ansible/collections community.docker
          ansible-galaxy collection install --collections-path /usr/share/ansible/collections /opt/src/osism/ansible-collection-commons
          ansible-galaxy collection install --collections-path /usr/share/ansible/collections /opt/src/osism/ansible-collection-services
          chmod -R +r /usr/share/ansible

- name: Create operator user
  hosts: testbed-manager.testbed.osism.xyz
  gather_facts: true

  vars:
    operator_user: dragon
    operator_group: dragon
    operator_authorized_keys:
      - "{{ lookup('file', '.id_rsa.' + cloud_env + '.pub') }}"

  roles:
    - role: osism.commons.operator
