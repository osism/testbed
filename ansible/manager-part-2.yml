---
- name: Prepare manager part 2
  hosts: testbed-manager
  connection: local

  vars:
    manager_version: latest

  tasks:
    - name: Set docker version facts for OSISM 6
      ansible.builtin.set_fact:
        __docker_version: "5:20.10.24"
        __docker_cli_version: "5:20.10.24"
      when:
        - manager_version != "latest"
        - manager_version is ansible.builtin.version("7.0.0", '<')

    - name: Set docker version facts for OSISM 7 (<= 7.1.0)
      ansible.builtin.set_fact:
        __docker_version: "5:24.0.9"
        __docker_cli_version: "5:24.0.9"
      when:
        - manager_version != "latest"
        - manager_version is ansible.builtin.version("7.0.0", '>=')
        - manager_version is ansible.builtin.version("7.1.0", '<=')

    - name: Set docker version facts for OSISM 7 (>= 7.1.1)
      ansible.builtin.set_fact:
        __docker_version: "5:26.1.4"
        __docker_cli_version: "5:26.1.4"
      when:
        - manager_version != "latest"
        - manager_version is ansible.builtin.version("7.1.1", '>=')

    - name: Set docker version facts for OSISM latest
      ansible.builtin.set_fact:
        __docker_version: "5:27.5.1"
        __docker_cli_version: "5:27.5.1"
      when:
        - manager_version == "latest"

    - name: Print used docker version
      ansible.builtin.debug:
        var: __docker_version

    - name: Print used docker cli version
      ansible.builtin.debug:
        var: __docker_cli_version

- name: Run manager part 2
  hosts: testbed-manager
  connection: local

  vars:
    manager_version: latest

    docker_user: dragon
    docker_opts:
      max-concurrent-downloads: 20
    docker_compose_install_type: package

  roles:
    - role: osism.services.docker
      vars:
        docker_version: "{{ __docker_version }}"
        docker_cli_version: "{{ __docker_cli_version }}"
    - role: osism.commons.docker_compose
    - role: osism.services.rng
