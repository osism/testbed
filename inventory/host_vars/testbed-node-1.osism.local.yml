---
##########################################################
# ansible

ansible_host: 192.168.40.11

##########################################################
# docker

docker_configure_proxy: yes
docker_proxy_http: "http://192.168.50.5:8000"

# NOTE: The testbed runs zun-compute on the node itself. Therefore the access
#       via TCP to Docker is necessary. This is not recommended for production.

docker_hosts:
  - "unix:///var/run/docker.sock"
  - "tcp://192.168.50.11:2375"

# NOTE: The cluster store is required because the nodes are used in Zun.

docker_opts:
  "cluster-store": "etcd://192.168.50.11:2379"

##########################################################
# generic

node_id: 1

console_interface: "{{ ansible_local.testbed_network_devices.management }}"
management_interface: "{{ ansible_local.testbed_network_devices.internal }}"

internal_address: 192.168.50.11
fluentd_host: 192.168.50.11

##########################################################
# cockpit

configure_cockpit_server: yes
cockpit_host: "{{ hostvars[inventory_hostname]['ansible_' + console_interface]['ipv4']['address'] }}"
cockpit_ssh_interface: "{{ ansible_local.testbed_network_devices.management }}"

##########################################################
# netdata

netdata_host_type: client

##########################################################
# network

network_allow_service_restart: no
network_restart_method: nothing

network_interfaces:
  - device: "{{ ansible_local.testbed_network_devices.management }}"
    auto: true
    family: inet
    method: static
    address: 192.168.40.11
    netmask: 255.255.255.0
    gateway: 192.168.40.1
    mtu: 1450
    up:
      - ip route add 192.168.60.0/24 via 192.168.50.5
    down:
      - ip route del 192.168.60.0/24 via 192.168.50.5

  - device: "{{ ansible_local.testbed_network_devices.internal }}"
    auto: true
    family: inet
    method: static
    address: 192.168.50.11
    netmask: 255.255.255.0
    mtu: 1450

  - device: "{{ ansible_local.testbed_network_devices.external }}"
    auto: true
    family: inet
    method: static
    address: 192.168.90.11
    netmask: 255.255.255.0
    mtu: 1450

  - device: "{{ ansible_local.testbed_network_devices.provider }}"
    auto: true
    family: inet
    method: manual
    mtu: 1450

  - device: "{{ ansible_local.testbed_network_devices.storage_frontend }}"
    auto: true
    family: inet
    method: static
    address: 192.168.70.11
    netmask: 255.255.255.0
    mtu: 1450

  - device: "{{ ansible_local.testbed_network_devices.storage_backend }}"
    auto: true
    family: inet
    method: static
    address: 192.168.80.11
    netmask: 255.255.255.0
    mtu: 1450

  - device: ohm0
    method: static
    address: 192.168.110.11
    netmask: 255.255.255.0
    up:
      - ip link set dev ohm0 address 02:00:00:00:00:11
      - iptables -I INPUT -i ohm0 -p udp --dport 5555 -j ACCEPT

##########################################################
# kolla

network_interface: "{{ ansible_local.testbed_network_devices.internal }}"

# api_interface:
# dns_interface:
kolla_external_vip_interface: "{{ ansible_local.testbed_network_devices.external }}"
# migration_interface:
neutron_external_interface: "{{ ansible_local.testbed_network_devices.provider }}"
# octavia_network_interface:
storage_interface: "{{ ansible_local.testbed_network_devices.storage_frontend }}"
# tunnel_interface:

##########################################################
# ceph

# monitor_interface:
monitor_address: 192.168.70.11
# radosgw_interface:
radosgw_address: 192.168.70.11

devices: "{{ ansible_local.testbed_ceph_devices }}"

# NOTE: to use the third block device for Ceph change this parameter as follows
# devices: "{{ ansible_local.testbed_ceph_devices_all }}"
